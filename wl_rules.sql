/****************************************************************************
* NAME:     WL_RULES.SQL
*
* PURPOSE:  This script creates the table which contains whitelist connection
* rules. It requires the schema name and tablespace name for the whitelist
* as inputs.
*
* INPUTS:    &1 = Schema Name
*            &2 = Tablespace Name
*
* REVISIONS:
* Ver        Date        Author           Description
* ---------  ----------  ---------------  ---------------------------------
* 1.0        10/19/2014  pmdba            1. Created this script.
*
****************************************************************************/
/* Create the sequence for the rule_id */



/* Create the table */
  CREATE TABLE "&1"."WL_RULES" 
   (	"RULE_ID" NUMBER, 
	"EXPIRE_DATE" DATE DEFAULT to_date('01-01-4000','MM-DD-YYYY'), 
	"AUTHENTICATED_IDENTITY" VARCHAR2(256 CHAR), 
	"ENTERPRISE_IDENTITY" VARCHAR2(256 CHAR), 
	"GLOBAL_UID" VARCHAR2(256 CHAR), 
	"OS_USER" VARCHAR2(256 CHAR), 
	"PROXY_ENTERPRISE_IDENTITY" VARCHAR2(256 CHAR), 
	"PROXY_USER" VARCHAR2(256 CHAR), 
	"PROXY_USERID" VARCHAR2(256 CHAR), 
	"SESSION_USER" VARCHAR2(256 CHAR), 
	"SESSION_USERID" VARCHAR2(256 CHAR), 
	"AUTHENTICATION_DATA" VARCHAR2(256 CHAR), 
	"AUTHENTICATION_METHOD" VARCHAR2(10 CHAR), 
	"BG_JOB_ID" VARCHAR2(10 CHAR), 
	"CLIENT_IDENTIFIER" VARCHAR2(256 CHAR), 
	"CLIENT_INFO" VARCHAR2(256 CHAR), 
	"DBLINK_INFO" VARCHAR2(256 CHAR), 
	"FG_JOB_ID" VARCHAR2(10 CHAR), 
	"HOST" VARCHAR2(256 CHAR), 
	"IDENTIFICATION_TYPE" VARCHAR2(20 CHAR), 
	"IP_ADDRESS" VARCHAR2(20 CHAR), 
	"ISDBA" VARCHAR2(5 CHAR), 
	"LANGUAGE" VARCHAR2(256 CHAR), 
	"MODULE" VARCHAR2(256 CHAR), 
	"NETWORK_PROTOCOL" VARCHAR2(10 CHAR), 
	"SERVICE_NAME" VARCHAR2(256 CHAR), 
	"TERMINAL" VARCHAR2(256 CHAR), 
	"DATABASE_ROLE" VARCHAR2(256 CHAR), 
	"DB_DOMAIN" VARCHAR2(256 CHAR), 
	"DB_NAME" VARCHAR2(256 CHAR), 
	"DB_UNIQUE_NAME" VARCHAR2(256 CHAR), 
	"INSTANCE" VARCHAR2(256 CHAR), 
	"INSTANCE_NAME" VARCHAR2(256 CHAR), 
	"NLS_CALENDAR" VARCHAR2(256 CHAR), 
	"NLS_CURRENCY" VARCHAR2(256 CHAR), 
	"NLS_DATE_FORMAT" VARCHAR2(256 CHAR), 
	"NLS_SORT" VARCHAR2(256 CHAR), 
	"NLS_TERRITORY" VARCHAR2(256 CHAR), 
	"SERVER_HOST" VARCHAR2(256 CHAR), 
	"SESSION_EDITION_ID" VARCHAR2(256 CHAR), 
	"SESSION_EDITION_NAME" VARCHAR2(256 CHAR)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 0 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 MAXSIZE UNLIMITED BUFFER_POOL KEEP FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "&2" ;

/* Create the index */

  CREATE UNIQUE INDEX "&1"."WL_RULES_PK" ON "&1"."WL_RULES" ("RULE_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 MAXSIZE UNLIMITED BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "&2" ;

/* Create the table constraints */

  ALTER TABLE "&1"."WL_RULES" ADD CONSTRAINT "WL_RULES_PK" PRIMARY KEY ("RULE_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 MAXSIZE UNLIMITED BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "&2"  ENABLE;
  ALTER TABLE "&1"."WL_RULES" MODIFY ("EXPIRE_DATE" NOT NULL ENABLE);
  ALTER TABLE "&1"."WL_RULES" MODIFY ("RULE_ID" NOT NULL ENABLE);

/* Create the trigger for the rule_id column */

  CREATE OR REPLACE TRIGGER "&1"."WL_RULES_TRG" 
BEFORE INSERT ON "&1".WL_RULES 
FOR EACH ROW
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.RULE_ID IS NULL THEN
      SELECT WL_RULES_SEQ.NEXTVAL INTO :NEW.RULE_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;

/
ALTER TRIGGER "&1"."WL_RULES_TRG" ENABLE;
